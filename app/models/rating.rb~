class Rating < ActiveRecord::Base
  validates :score, numericality: { greater_than_or_equal_to: 1,
                                    less_than_or_equal_to: 50,
                                    only_integer: true }


  belongs_to :beer
  belongs_to :user

  def to_s
    "#{beer.name} #{score}"
  end

  def self.recent(n)
    recent = Rating.all.sort{ |r| r.id }.reverse!.first(n)
  end
  def self.top_styles(n)
    rated = Rating.map{ |r| r.beer.style }.uniq
    rated.sort_by { |style| -rating_of_style(style) }.first(n)
  end
  def rating_of_style(style)
    ratings_of = ratings.select{ |r| r.beer.style==style }
    ratings_of.map(&:score).inject(&:+) / ratings_of.count.to_f
  end


end
